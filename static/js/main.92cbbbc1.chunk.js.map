{"version":3,"sources":["components/navbar/wide.navbar.component.js","components/navbar/mobile.navbar.component.js","backend/game/data/users.js","backend/game/data/questions.js","backend/game/game.backend.js","services/game/game.service.js","actions/authenticatedUser.action.js","components/navbar/navbar.component.js","components/footer/footer.component.js","views/dashboard/compose/compose.component.js","views/dashboard/leaderboard/leaderboard.component.js","actions/users.actions.js","views/dashboard/login/login.component.js","actions/questions.actions.js","components/question/info/question.info.component.js","components/question/list/question.list.component.js","views/dashboard/home/home.component.js","actions/shared.actions.js","views/dashboard/dashboard.component.js","App.js","serviceWorker.js","reducers/index.js","reducers/users.reducer.js","reducers/questions.reducer.js","reducers/authenticatedUser.reducer.js","middlewares/logger.middleware.js","middlewares/index.js","index.js","assets/logo.svg"],"names":["WideNavbarComponent","props","isLoading","authenticatedUser","signOut","Menu","size","secondary","Item","Image","src","logo","alt","className","header","Fragment","avatarURL","spaced","avatar","name","as","NavLink","to","exact","activeClassName","position","onClick","Icon","icon","text","MobileNavbarComponent","Dropdown","Button","Divider","users","molly","id","answers","questions","matthew","elyse","author","timestamp","optionOne","votes","optionTwo","GameBackend","Math","random","toString","substring","Promise","res","rej","setTimeout","userId","resolve","reject","userKey","optionOneText","optionTwoText","generateUID","Date","now","question","formattedQuestion","formatQuestion","concat","e","qid","answer","GameService","all","getUsers","getQuestions","then","signIn","questionId","user","authenticatedUserAnswer","authorId","authorName","authorAvatar","AUTHENTICATED_USER_ACTION_TYPES","setAuthenticatedUser","type","NavbarComponent","dispatch","this","style","backgroundColor","Responsive","minWidth","bind","maxWidth","Component","connect","loadingBar","default","FooterComponent","href","rel","target","ComposeComponent","LeaderboardComponent","USERS_ACTION_TYPES","receiveUsers","LoginComponent","showLoading","hideLoading","catch","error","alert","finally","userOptions","initializeUserOptions","Card","fluid","color","CardHeader","textAlign","padding","Header","Content","floating","labeled","button","content","length","map","option","key","value","Object","keys","image","QUESTIONS_ACTION_TYPES","receiveQuestions","QuestionInfoComponent","questionCard","CardContent","Grid","celled","columns","Column","verticalAlign","circular","attached","Link","QuestionListComponent","questionCards","Message","negative","HomeComponent","getInitialData","loading","sort","a","b","generateQuestionBasicCardInfo","answeredList","filter","unAnsweredList","panes","menuItem","render","Tab","Pane","DashboardComponent","path","App","basename","Segment","Boolean","window","location","hostname","match","combineReducers","state","action","loadingBarReducer","logger","store","next","console","group","log","result","getState","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.92cbbbc1.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Icon, Image, Menu} from \"semantic-ui-react\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction WideNavbarComponent(props) {\r\n\r\n    const {isLoading, authenticatedUser, signOut} = props;\r\n\r\n    return (\r\n        <Menu size='large' secondary>\r\n            <Menu.Item>\r\n                <Image src={logo}\r\n                       size='mini'\r\n                       alt=\"would you rather application logo\"\r\n                       className={isLoading ? \"spin\" : \"\"}\r\n                />\r\n            </Menu.Item>\r\n            {!authenticatedUser && (<Menu.Item header>Would you rather?</Menu.Item>)}\r\n            {authenticatedUser && (\r\n                <React.Fragment>\r\n                    <Menu.Item header>\r\n                        <Image src={authenticatedUser.avatarURL}\r\n                               size='mini'\r\n                               spaced={\"right\"}\r\n                               avatar\r\n                               alt={`avatar of ${authenticatedUser.name}`}\r\n                        />\r\n                        {`Hello, ${authenticatedUser.name}`}\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        as={NavLink}\r\n                        to=\"/\"\r\n                        exact\r\n                        activeClassName='active'\r\n                        name='home'\r\n                    />\r\n                    <Menu.Item\r\n                        as={NavLink}\r\n                        to=\"/new\"\r\n                        exact\r\n                        activeClassName='active'\r\n                        name='New Question'\r\n                    />\r\n                    <Menu.Item\r\n                        as={NavLink}\r\n                        to=\"/leaderboard\"\r\n                        exact\r\n                        activeClassName='active'\r\n                        name='Leader Board'\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n            <Menu.Menu position='right'>\r\n                {authenticatedUser && (\r\n                    <Menu.Item\r\n                        onClick={() => {\r\n                            signOut()\r\n                        }}\r\n                        name='sign-out'>\r\n                        <Icon name='sign-out'/>\r\n                        Sign out\r\n                    </Menu.Item>\r\n                )}\r\n                {!authenticatedUser && (\r\n                    <Menu.Item as={NavLink}\r\n                               to=\"/login\"\r\n                               exact\r\n                               activeClassName='active'\r\n                               name=\"sign-in\"\r\n                               icon='sign-in'\r\n                               text='Sign In'/>\r\n                )}\r\n            </Menu.Menu>\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default WideNavbarComponent;\r\n\r\nWideNavbarComponent.propTypes = {\r\n    isLoading: PropTypes.number,\r\n    authenticatedUser: PropTypes.object,\r\n    signOut: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport {Button, Dropdown, Image, Menu} from \"semantic-ui-react\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction MobileNavbarComponent(props) {\r\n\r\n    const {isLoading, authenticatedUser, signOut} = props;\r\n\r\n    return (\r\n        <Menu size='large' secondary>\r\n            <Menu.Item>\r\n                <Image src={logo}\r\n                       size='mini'\r\n                       alt=\"would you rather application logo\"\r\n                       className={isLoading ? \"spin\" : \"\"}\r\n                />\r\n            </Menu.Item>\r\n            {!authenticatedUser && (<Menu.Item header>Would you rather?</Menu.Item>)}\r\n            {authenticatedUser && (<Menu.Item header>\r\n                <Image src={authenticatedUser.avatarURL}\r\n                       size='mini'\r\n                       spaced={\"right\"}\r\n                       avatar\r\n                       alt={`avatar of ${authenticatedUser.name}`}\r\n                />\r\n                {`Hello, ${authenticatedUser.name}`}\r\n            </Menu.Item>)}\r\n            <Menu.Menu position='right'>\r\n                <Dropdown\r\n                    icon='bars'\r\n                    as={Button}\r\n                    secondary\r\n                    size=\"large\"\r\n                    className='icon'\r\n                >\r\n                    <Dropdown.Menu>\r\n                        {authenticatedUser && (\r\n                            <React.Fragment>\r\n                                <Dropdown.Item as={NavLink}\r\n                                               to=\"/\"\r\n                                               exact\r\n                                               activeClassName='active'\r\n                                               name='home'>\r\n                                    Home</Dropdown.Item>\r\n                                <Dropdown.Item as={NavLink}\r\n                                               to=\"/new\"\r\n                                               exact\r\n                                               activeClassName='active'\r\n                                               name='New Question'>\r\n                                    New Question</Dropdown.Item>\r\n                                <Dropdown.Item as={NavLink}\r\n                                               to=\"/leaderboard\"\r\n                                               exact\r\n                                               activeClassName='active'\r\n                                               name='Leader Board'>\r\n                                    Leader Board</Dropdown.Item>\r\n                                <Dropdown.Divider/>\r\n                                <Dropdown.Item onClick={() => {\r\n                                                   signOut()\r\n                                               }}\r\n                                               icon='sign-out'\r\n                                               text='Sign Out'/>\r\n                            </React.Fragment>\r\n                        )}\r\n                        {!authenticatedUser && (\r\n                            <Dropdown.Item as={NavLink}\r\n                                           to=\"/login\"\r\n                                           exact\r\n                                           activeClassName='active'\r\n                                           name=\"sign-in\"\r\n                                           icon='sign-in'\r\n                                           text='Sign In'/>\r\n                        )}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </Menu.Menu>\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default MobileNavbarComponent;\r\n\r\nMobileNavbarComponent.propTypes = {\r\n    isLoading: PropTypes.number,\r\n    authenticatedUser: PropTypes.object,\r\n    signOut: PropTypes.func.isRequired\r\n};\r\n","export let users = {\r\n    molly: {\r\n        id: 'molly',\r\n        name: 'Molly',\r\n        avatarURL: 'https://semantic-ui.com/images/avatar2/large/molly.png',\r\n        answers: {\r\n            \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\r\n            \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n            \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\r\n        },\r\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n    },\r\n    matthew: {\r\n        id: 'matthew',\r\n        name: 'Matthew',\r\n        avatarURL: 'https://semantic-ui.com/images/avatar2/large/matthew.png',\r\n        answers: {\r\n            \"vthrdm985a262al8qx3do\": 'optionOne',\r\n            \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n        },\r\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n    },\r\n    elyse: {\r\n        id: 'elyse',\r\n        name: 'Elyse',\r\n        avatarURL: 'https://semantic-ui.com/images/avatar2/large/elyse.png',\r\n        answers: {\r\n            \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n            \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\r\n        },\r\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n    }\r\n};\r\n","export let questions = {\r\n    \"8xf0y6ziyjabvozdd253nd\": {\r\n        id: '8xf0y6ziyjabvozdd253nd',\r\n        author: 'molly',\r\n        timestamp: 1467166872634,\r\n        optionOne: {\r\n            votes: ['molly'],\r\n            text: 'have horrible short term memory',\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: 'have horrible long term memory'\r\n        }\r\n    },\r\n    \"6ni6ok3ym7mf1p33lnez\": {\r\n        id: '6ni6ok3ym7mf1p33lnez',\r\n        author: 'matthew',\r\n        timestamp: 1468479767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'become a superhero',\r\n        },\r\n        optionTwo: {\r\n            votes: ['matthew', 'molly'],\r\n            text: 'become a supervillain'\r\n        }\r\n    },\r\n    \"am8ehyc8byjqgar0jgpub9\": {\r\n        id: 'am8ehyc8byjqgar0jgpub9',\r\n        author: 'molly',\r\n        timestamp: 1488579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be telekinetic',\r\n        },\r\n        optionTwo: {\r\n            votes: ['molly'],\r\n            text: 'be telepathic'\r\n        }\r\n    },\r\n    \"loxhs1bqm25b708cmbf3g\": {\r\n        id: 'loxhs1bqm25b708cmbf3g',\r\n        author: 'elyse',\r\n        timestamp: 1482579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be a front-end developer',\r\n        },\r\n        optionTwo: {\r\n            votes: ['molly'],\r\n            text: 'be a back-end developer'\r\n        }\r\n    },\r\n    \"vthrdm985a262al8qx3do\": {\r\n        id: 'vthrdm985a262al8qx3do',\r\n        author: 'elyse',\r\n        timestamp: 1489579767190,\r\n        optionOne: {\r\n            votes: ['elyse'],\r\n            text: 'find $50 yourself',\r\n        },\r\n        optionTwo: {\r\n            votes: ['matthew'],\r\n            text: 'have your best friend find $500'\r\n        }\r\n    },\r\n    \"xj352vofupe1dqz9emx13r\": {\r\n        id: 'xj352vofupe1dqz9emx13r',\r\n        author: 'matthew',\r\n        timestamp: 1493579767190,\r\n        optionOne: {\r\n            votes: ['matthew'],\r\n            text: 'write JavaScript',\r\n        },\r\n        optionTwo: {\r\n            votes: ['elyse'],\r\n            text: 'write Swift'\r\n        }\r\n    },\r\n};\r\n","import {questions, users} from \"./data\";\r\n\r\nexport class GameBackend {\r\n\r\n    static generateUID() {\r\n        return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n    }\r\n\r\n    static getUsers() {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => res({...users}), 1000)\r\n        })\r\n    }\r\n\r\n    static getQuestions() {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => res({...questions}), 1000)\r\n        })\r\n    }\r\n\r\n    static signIn(userId) {\r\n        return new Promise(((resolve, reject) => {\r\n            for (let userKey in users) {\r\n                if (userKey === userId) {\r\n                    setTimeout(() => resolve(userId), 1000);\r\n                    return;\r\n                }\r\n            }\r\n            reject(\"Invalid user!\");\r\n        }));\r\n    }\r\n\r\n    static formatQuestion({optionOneText, optionTwoText, author}) {\r\n        return {\r\n            id: GameBackend.generateUID(),\r\n            timestamp: Date.now(),\r\n            author,\r\n            optionOne: {\r\n                votes: [],\r\n                text: optionOneText,\r\n            },\r\n            optionTwo: {\r\n                votes: [],\r\n                text: optionTwoText,\r\n            }\r\n        }\r\n    }\r\n\r\n    static saveQuestion(question) {\r\n        return new Promise((res, rej) => {\r\n            try {\r\n                const authenticatedUser = question.author;\r\n                const formattedQuestion = GameBackend.formatQuestion(question);\r\n                setTimeout(() => {\r\n                    questions[formattedQuestion.id] = formattedQuestion;\r\n                    users[authenticatedUser].questions.concat([formattedQuestion.id]);\r\n                    res(formattedQuestion)\r\n                }, 1000)\r\n            } catch (e) {\r\n                rej(e);\r\n            }\r\n        })\r\n    }\r\n\r\n    static saveQuestionAnswer({authenticatedUser, qid, answer}) {\r\n        return new Promise((res, rej) => {\r\n            try {\r\n                setTimeout(() => {\r\n                    users[authenticatedUser].answers[qid] = answer;\r\n                    questions[qid][answer].votes.concat([authenticatedUser]);\r\n                    res()\r\n                }, 500)\r\n            } catch (e) {\r\n                rej(e);\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n","import {GameBackend} from \"../../backend/game/game.backend\";\r\n\r\nexport class GameService {\r\n\r\n    static getInitialData() {\r\n        return Promise.all([\r\n            GameBackend.getUsers(),\r\n            GameBackend.getQuestions()\r\n        ]).then(([users, questions]) => ({\r\n            users,\r\n            questions\r\n        }));\r\n    }\r\n\r\n    static getUsers() {\r\n        return GameBackend.getUsers();\r\n    }\r\n\r\n    static signIn(userId){\r\n        return GameBackend.signIn(userId);\r\n    }\r\n\r\n    static getQuestions() {\r\n        return GameBackend.getQuestions();\r\n    }\r\n\r\n    static generateQuestionBasicCardInfo(authenticatedUser, questionId, users, questions) {\r\n\r\n        if (!(users\r\n            && questions\r\n            && questionId\r\n            && questions[questionId]\r\n            && questions[questionId][\"optionOne\"]\r\n            && questions[questionId][\"optionTwo\"]\r\n            && questions[questionId][\"author\"])) {\r\n            return {}\r\n        }\r\n\r\n        const question = questions[questionId];\r\n        const user = users[question.author];\r\n        const authenticatedUserAnswer = questions[questionId][users[authenticatedUser][\"answers\"][questionId]];\r\n\r\n        return {\r\n            questionId,\r\n            optionOne: question.optionOne.text,\r\n            optionTwo: question.optionTwo.text,\r\n            authenticatedUserAnswer: authenticatedUserAnswer ? authenticatedUserAnswer.text : \"\",\r\n            authorId: question.author,\r\n            authorName: user.name,\r\n            authorAvatar: user.avatarURL\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import {hideLoading, showLoading} from \"react-redux-loading-bar\";\r\nimport {GameService} from \"../services\";\r\n\r\nexport const AUTHENTICATED_USER_ACTION_TYPES = {\r\n    SET_AUTHENTICATED_USER: \"SET_AUTHENTICATED_USER\"\r\n};\r\n\r\n\r\nexport function setAuthenticatedUser(authenticatedUser) {\r\n    return {\r\n        type: AUTHENTICATED_USER_ACTION_TYPES.SET_AUTHENTICATED_USER,\r\n        authenticatedUser\r\n    }\r\n}\r\n\r\nexport function handleSetAuthenticatedUser(authenticatedUser) {\r\n    return (dispatch) => {\r\n        dispatch(showLoading());\r\n        GameService.signIn(authenticatedUser)\r\n            .then(() => {\r\n                dispatch(setAuthenticatedUser(authenticatedUser));\r\n            }).catch((error) => {\r\n            alert(error);\r\n        })\r\n            .finally(() => {\r\n                dispatch(hideLoading());\r\n            })\r\n    };\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Responsive} from \"semantic-ui-react\";\r\nimport LoadingBar from \"react-redux-loading-bar\";\r\nimport WideNavbarComponent from \"./wide.navbar.component\";\r\nimport MobileNavbarComponent from \"./mobile.navbar.component\";\r\nimport {setAuthenticatedUser} from \"../../actions/authenticatedUser.action\";\r\n\r\nclass NavbarComponent extends Component {\r\n\r\n    signOut() {\r\n        const {dispatch} = this.props;\r\n        dispatch(setAuthenticatedUser(null));\r\n    }\r\n\r\n\r\n    render() {\r\n        const {isLoading, authenticatedUser} = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <LoadingBar style={{backgroundColor: 'rgb(97,218,251)'}}/>\r\n                <Responsive minWidth={768}>\r\n                    <WideNavbarComponent authenticatedUser={authenticatedUser}\r\n                                         isLoading={isLoading}\r\n                                         signOut={this.signOut.bind(this)}/>\r\n                </Responsive>\r\n                <Responsive maxWidth={767}>\r\n                    <MobileNavbarComponent authenticatedUser={authenticatedUser}\r\n                                           isLoading={isLoading}\r\n                                           signOut={this.signOut.bind(this)}/>\r\n                </Responsive>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authenticatedUser, users, loadingBar}) {\r\n    return {\r\n        authenticatedUser: users ? users[authenticatedUser] : null,\r\n        isLoading: loadingBar.default\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavbarComponent);\r\n","import React from 'react';\r\n\r\nfunction FooterComponent() {\r\n    return (\r\n        <span className=\"copy-right\">\r\n                    copyright © 2020 all rights reserved by\r\n                    <a href=\"https://www.seanroshan.com\" rel=\"noopener noreferrer\" target=\"_blank\"\r\n                       className=\"copy-right-link\">Sean Roshan</a>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default FooterComponent;\r\n","import React, {Component} from 'react';\r\n\r\nclass ComposeComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Compose Component!</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ComposeComponent;\r\n","import React, {Component} from 'react';\r\n\r\nclass LeaderboardComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Leaderboard Component!</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeaderboardComponent;\r\n","import {hideLoading, showLoading} from \"react-redux-loading-bar\";\r\nimport {GameService} from \"../services\";\r\n\r\nexport const USERS_ACTION_TYPES = {\r\n    RECEIVE_USERS: \"RECEIVE_USERS\"\r\n};\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: USERS_ACTION_TYPES.RECEIVE_USERS,\r\n        users\r\n    }\r\n}\r\n\r\n\r\nexport function handleReceiveUsers() {\r\n    return (dispatch) => {\r\n        dispatch(showLoading());\r\n        GameService.getUsers().then((users) => {\r\n            dispatch(receiveUsers(users));\r\n            dispatch(hideLoading());\r\n        });\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {handleReceiveUsers} from \"../../../actions/users.actions\";\r\nimport {Card, CardHeader, Dropdown, Header, Image, Responsive} from \"semantic-ui-react\";\r\nimport {handleSetAuthenticatedUser} from \"../../../actions/authenticatedUser.action\";\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    static initializeUserOptions(users) {\r\n        if (!users) return [];\r\n        return Object.keys(users).map((key) => {\r\n            const user = users[key];\r\n            return {\r\n                key,\r\n                text: user.name,\r\n                value: user.id,\r\n                image: {avatar: true, src: user.avatarURL}\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {dispatch, users} = this.props;\r\n        dispatch(handleReceiveUsers(users));\r\n    }\r\n\r\n    signIn(userId) {\r\n        const {dispatch} = this.props;\r\n        dispatch(handleSetAuthenticatedUser(userId));\r\n    }\r\n\r\n    render() {\r\n\r\n        const header = \"Welcome to the Would You Rather App!\";\r\n        const subHeader = \"Please sign in to continue\";\r\n\r\n        const {users} = this.props;\r\n\r\n        let userOptions = LoginComponent.initializeUserOptions(users);\r\n\r\n        return (\r\n            <Card fluid color='grey'>\r\n                <CardHeader textAlign=\"center\" style={{backgroundColor: \"rgba(220,220,220,0.5)\", padding: \"10px\"}}>\r\n                    <Responsive minWidth=\"401\" as={Header} size=\"medium\">{header}</Responsive>\r\n                    <Responsive maxWidth=\"400\" as={Header} size=\"small\">{header}</Responsive>\r\n                    <Header size=\"tiny\">{subHeader}</Header>\r\n                </CardHeader>\r\n                <Card.Content textAlign={\"center\"}>\r\n                    <Image\r\n                        src=\"https://s3-us-west-2.amazonaws.com/asset.plexuss.com/news/images/would-you-rather-school-edition-lg.jpg\"\r\n                        size='large'\r\n                        alt=\"would you rather login image\"\r\n                    />\r\n                    <Header size=\"huge\" color=\"black\">Sign in</Header>\r\n                    <Dropdown\r\n                        text='Select User'\r\n                        icon='user'\r\n                        floating\r\n                        labeled\r\n                        button\r\n                        className='icon'\r\n                    >\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Header content='Please select a user to sign in'/>\r\n                            {userOptions && userOptions.length && userOptions.map((option) => (\r\n                                <Dropdown.Item key={option.value} onClick={() => this.signIn(option.key)} {...option} />\r\n                            ))}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Card.Content>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mapStateToProps({users}) {\r\n    return {\r\n        users\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginComponent);\r\n","import {hideLoading, showLoading} from \"react-redux-loading-bar\";\r\nimport {GameService} from \"../services\";\r\n\r\nexport const QUESTIONS_ACTION_TYPES = {\r\n    RECEIVE_QUESTIONS: \"RECEIVE_QUESTIONS\"\r\n};\r\n\r\nexport function receiveQuestions(questions) {\r\n    return {\r\n        type: QUESTIONS_ACTION_TYPES.RECEIVE_QUESTIONS,\r\n        questions\r\n    }\r\n}\r\n\r\n\r\nexport function handleReceiveQuestions() {\r\n    return (dispatch) => {\r\n        dispatch(showLoading());\r\n        GameService.getQuestions().then((questions) => {\r\n            dispatch(receiveQuestions(questions));\r\n            dispatch(hideLoading());\r\n        });\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Button, Card, CardContent, Grid, Header, Image} from \"semantic-ui-react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass QuestionInfoComponent extends Component {\r\n\r\n    render() {\r\n        const {questionCard} = this.props;\r\n\r\n        const {authorName, authorAvatar, optionOne, optionTwo, authenticatedUserAnswer} = questionCard;\r\n\r\n        return (\r\n            <Card fluid>\r\n                <Card.Content header={`${authorName} asks:`}/>\r\n                <CardContent>\r\n                    <Grid celled columns={2}>\r\n                        <Grid.Column verticalAlign='middle' textAlign={\"center\"}>\r\n                            <Image src={authorAvatar} size='small' circular/>\r\n                        </Grid.Column>\r\n                        <Grid.Column verticalAlign='top'>\r\n                            <Header textAlign={\"left\"} size={\"medium\"}>Would you rather?</Header>\r\n                            <Header textAlign={\"left\"} size={\"small\"}>{`${optionOne}`}</Header>\r\n                            <Header textAlign={\"left\"} size={\"small\"}>Or</Header>\r\n                            <Header textAlign={\"left\"} size={\"small\"}>{`${optionTwo}`}</Header>\r\n                            {authenticatedUserAnswer && (<Header textAlign={\"left\"} size={\"large\"}\r\n                                                                 color=\"blue\">{`Your Answer: ${authenticatedUserAnswer}`}</Header>)}\r\n                        </Grid.Column>\r\n                    </Grid>\r\n                </CardContent>\r\n                <Button secondary attached='top' as={Link} to={`/questions/${questionCard.questionId}`}>View\r\n                    Poll</Button>\r\n            </Card>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps({authenticatedUser}, {questionCard}) {\r\n    return {\r\n        authenticatedUser,\r\n        questionCard\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(QuestionInfoComponent);\r\n","import React from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport QuestionInfoComponent from \"../info/question.info.component\";\r\nimport {Message} from \"semantic-ui-react\";\r\n\r\nfunction QuestionListComponent(props) {\r\n\r\n    const {questionCards} = props;\r\n\r\n\r\n    return (questionCards && questionCards.length)\r\n        ? questionCards.map((questionCard) => (\r\n            <QuestionInfoComponent key={questionCard.questionId} questionCard={questionCard}/>))\r\n        : (<Message negative>\r\n            <Message.Header>Empty list!</Message.Header>\r\n        </Message>)\r\n\r\n\r\n}\r\n\r\nexport default QuestionListComponent;\r\n\r\nQuestionListComponent.propTypes = {\r\n    questionCards: PropTypes.array\r\n};\r\n","import React, {Component} from 'react';\r\nimport {handleInitialData} from \"../../../actions/shared.actions\";\r\nimport {connect} from \"react-redux\";\r\nimport QuestionListComponent from \"../../../components/question/list/question.list.component\";\r\nimport {Tab} from \"semantic-ui-react\";\r\nimport {GameService} from \"../../../services\";\r\n\r\nclass HomeComponent extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.dispatch(handleInitialData())\r\n    }\r\n\r\n    render() {\r\n\r\n        const {questions, users, authenticatedUser, loading} = this.props;\r\n\r\n        const questionCards =\r\n            questions ?\r\n                Object.keys(questions)\r\n                    .sort((a, b) => questions[b].timestamp - questions[a].timestamp)\r\n                    .map((questionId) => (GameService.generateQuestionBasicCardInfo(authenticatedUser, questionId, users, questions)))\r\n                : [];\r\n\r\n        const answeredList = questionCards.filter((questionCard) => questionCard.authenticatedUserAnswer);\r\n        const unAnsweredList = questionCards.filter((questionCard) => !questionCard.authenticatedUserAnswer);\r\n\r\n        const panes = [\r\n            {\r\n                menuItem: 'Unanswered Questions',\r\n                key: \"unansweredList\",\r\n                render: () => <Tab.Pane loading={loading}><QuestionListComponent\r\n                    questionCards={unAnsweredList}/></Tab.Pane>\r\n            },\r\n            {\r\n                menuItem: 'Answered Questions',\r\n                key: \"answeredList\",\r\n                render: () => <Tab.Pane loading={loading}><QuestionListComponent\r\n                    questionCards={answeredList}/></Tab.Pane>\r\n            },\r\n        ];\r\n\r\n        return (\r\n            <Tab panes={panes}/>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authenticatedUser, users, questions, loadingBar}) {\r\n    return {\r\n        loading: !!loadingBar.default,\r\n        questions,\r\n        authenticatedUser,\r\n        users\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomeComponent);\r\n","import {hideLoading, showLoading} from \"react-redux-loading-bar\";\r\nimport {receiveUsers} from \"./users.actions\";\r\nimport {receiveQuestions} from \"./questions.actions\";\r\nimport {GameService} from \"../services\";\r\n\r\nexport function handleInitialData() {\r\n    return (dispatch) => {\r\n        dispatch(showLoading());\r\n        GameService.getInitialData().then(({users, questions}) => {\r\n            dispatch(receiveUsers(users));\r\n            dispatch(receiveQuestions(questions));\r\n            dispatch(hideLoading());\r\n        });\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport ComposeComponent from \"./compose/compose.component\";\r\nimport LeaderboardComponent from \"./leaderboard/leaderboard.component\";\r\nimport LoginComponent from \"./login/login.component\";\r\nimport {connect} from \"react-redux\";\r\nimport HomeComponent from \"./home/home.component\";\r\n\r\nclass DashboardComponent extends Component {\r\n\r\n    render() {\r\n\r\n        const {authenticatedUser} = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Route path=\"/\" exact render={() => {\r\n                    return authenticatedUser\r\n                        ? <HomeComponent/>\r\n                        : <Redirect to=\"/login\"/>;\r\n                }}/>\r\n                <Route path=\"/new\" render={() => {\r\n                    return authenticatedUser\r\n                        ? <ComposeComponent/>\r\n                        : <Redirect to=\"/login\"/>;\r\n                }}/>\r\n                <Route path=\"/leaderboard\" render={() => {\r\n                    return authenticatedUser\r\n                        ? <LeaderboardComponent/>\r\n                        : <Redirect to=\"/login\"/>;\r\n                }}/>\r\n                <Route path=\"/login\" render={() => {\r\n                    return authenticatedUser\r\n                        ? <Redirect to=\"/\"/>\r\n                        : <LoginComponent/>;\r\n                }}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps({authenticatedUser}) {\r\n    return {\r\n        authenticatedUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DashboardComponent);\r\n","import React, {Component} from 'react';\nimport './styles/Application.scss';\nimport NavbarComponent from \"./components/navbar/navbar.component\";\nimport {Segment} from \"semantic-ui-react\";\nimport FooterComponent from \"./components/footer/footer.component\";\nimport {HashRouter} from \"react-router-dom\";\nimport DashboardComponent from \"./views/dashboard/dashboard.component\";\n\n/**\n * @return {boolean}\n */\nclass App extends Component {\n\n    render() {\n        return (\n            <HashRouter basename=\"/\">\n                <div className=\"header\">\n                    <NavbarComponent/>\n                </div>\n                <Segment className=\"app-content-container\">\n                    <DashboardComponent/>\n                </Segment>\n                <div className=\"app-footer-container\"><FooterComponent/></div>\n            </HashRouter>\n        );\n    }\n\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\";\r\nimport {loadingBarReducer} from \"react-redux-loading-bar\";\r\n\r\nimport users from \"./users.reducer\";\r\nimport questions from \"./questions.reducer\";\r\nimport authenticatedUser from \"./authenticatedUser.reducer\";\r\n\r\n\r\nexport default combineReducers({\r\n    users,\r\n    questions,\r\n    authenticatedUser,\r\n    loadingBar: loadingBarReducer\r\n});\r\n","import {USERS_ACTION_TYPES} from \"../actions/users.actions\";\r\n\r\nexport default function users(state = {}, action) {\r\n    switch (action.type) {\r\n        case USERS_ACTION_TYPES.RECEIVE_USERS: {\r\n            return {\r\n                ...state,\r\n                ...action.users\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n","import {QUESTIONS_ACTION_TYPES} from \"../actions/questions.actions\";\r\n\r\nexport default function questions(state = {}, action) {\r\n    switch (action.type) {\r\n        case QUESTIONS_ACTION_TYPES.RECEIVE_QUESTIONS: {\r\n            return {\r\n                ...state,\r\n                ...action.questions\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n    }\r\n}\r\n","import {AUTHENTICATED_USER_ACTION_TYPES} from \"../actions/authenticatedUser.action\";\r\n\r\nexport default function authenticatedUser(state = null, action) {\r\n    switch (action.type) {\r\n        case AUTHENTICATED_USER_ACTION_TYPES.SET_AUTHENTICATED_USER: {\r\n            return action.authenticatedUser\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","const logger = (store) => (next) => (action) => {\r\n    console.group(action.type);\r\n    console.log('The action: ', action);\r\n    const result = next(action);\r\n    console.log('The new state: ', store.getState());\r\n    console.groupEnd();\r\n    return result;\r\n};\r\nexport default logger;\r\n","import thunk from \"redux-thunk\";\r\nimport logger from \"./logger.middleware\";\r\nimport {applyMiddleware} from \"redux\";\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n    logger\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport reducer from './reducers';\nimport middleware from './middlewares';\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}