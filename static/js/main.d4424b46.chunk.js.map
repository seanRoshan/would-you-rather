{"version":3,"sources":["components/navbar/wide.navbar.component.js","components/navbar/mobile.navbar.component.js","backend/game/data/users.js","backend/game/data/questions.js","backend/game/game.backend.js","services/game/game.service.js","actions/authenticatedUser.action.js","components/navbar/navbar.component.js","components/footer/footer.component.js","views/dashboard/compose/compose.component.js","views/dashboard/leaderboard/leaderboard.component.js","actions/users.actions.js","views/dashboard/login/login.component.js","views/dashboard/home/home.component.js","views/dashboard/dashboard.component.js","App.js","actions/shared.actions.js","serviceWorker.js","reducers/index.js","reducers/users.reducer.js","reducers/authenticatedUser.reducer.js","middlewares/logger.middleware.js","middlewares/index.js","index.js","assets/logo.svg"],"names":["WideNavbarComponent","props","isLoading","authenticatedUser","signOut","Menu","size","secondary","Item","Image","src","logo","alt","className","header","Fragment","avatarURL","spaced","avatar","name","as","NavLink","to","exact","activeClassName","position","onClick","Icon","icon","text","MobileNavbarComponent","Dropdown","Button","Divider","users","molly","id","answers","questions","matthew","elyse","author","timestamp","optionOne","votes","optionTwo","GameBackend","Math","random","toString","substring","Promise","res","rej","setTimeout","userId","resolve","reject","userKey","optionOneText","optionTwoText","generateUID","Date","now","question","formattedQuestion","formatQuestion","concat","e","qid","answer","GameService","all","getUsers","getQuestions","then","signIn","AUTHENTICATED_USER_ACTION_TYPES","setAuthenticatedUser","type","NavbarComponent","dispatch","this","style","backgroundColor","Responsive","minWidth","bind","maxWidth","Component","connect","loadingBar","default","FooterComponent","href","rel","target","ComposeComponent","LeaderboardComponent","USERS_ACTION_TYPES","handleReceiveUsers","showLoading","receiveUsers","hideLoading","LoginComponent","catch","error","alert","finally","userOptions","initializeUserOptions","Card","fluid","color","CardHeader","textAlign","padding","Header","Content","floating","labeled","button","content","length","map","option","key","value","Object","keys","user","image","HomeComponent","DashboardComponent","path","render","App","basename","Segment","Boolean","window","location","hostname","match","combineReducers","state","action","loadingBarReducer","logger","store","next","console","group","log","result","getState","groupEnd","applyMiddleware","thunk","createStore","reducer","middleware","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message","module","exports"],"mappings":"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","file":"static/js/main.d4424b46.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Icon, Image, Menu} from \"semantic-ui-react\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction WideNavbarComponent(props) {\r\n\r\n    const {isLoading, authenticatedUser, signOut} = props;\r\n\r\n    return (\r\n        <Menu size='large' secondary>\r\n            <Menu.Item>\r\n                <Image src={logo}\r\n                       size='mini'\r\n                       alt=\"would you rather application logo\"\r\n                       className={isLoading ? \"spin\" : \"\"}\r\n                />\r\n            </Menu.Item>\r\n            {!authenticatedUser && (<Menu.Item header>Would you rather?</Menu.Item>)}\r\n            {authenticatedUser && (\r\n                <React.Fragment>\r\n                    <Menu.Item header>\r\n                        <Image src={authenticatedUser.avatarURL}\r\n                               size='mini'\r\n                               spaced={\"right\"}\r\n                               avatar\r\n                               alt={`avatar of ${authenticatedUser.name}`}\r\n                        />\r\n                        {`Hello, ${authenticatedUser.name}`}\r\n                    </Menu.Item>\r\n                    <Menu.Item\r\n                        as={NavLink}\r\n                        to=\"/\"\r\n                        exact\r\n                        activeClassName='active'\r\n                        name='home'\r\n                    />\r\n                    <Menu.Item\r\n                        as={NavLink}\r\n                        to=\"/new\"\r\n                        exact\r\n                        activeClassName='active'\r\n                        name='New Question'\r\n                    />\r\n                    <Menu.Item\r\n                        as={NavLink}\r\n                        to=\"/leaderboard\"\r\n                        exact\r\n                        activeClassName='active'\r\n                        name='Leader Board'\r\n                    />\r\n                </React.Fragment>\r\n            )}\r\n            <Menu.Menu position='right'>\r\n                {authenticatedUser && (\r\n                    <Menu.Item\r\n                        onClick={() => {\r\n                            signOut()\r\n                        }}\r\n                        name='sign-out'>\r\n                        <Icon name='sign-out'/>\r\n                        Sign out\r\n                    </Menu.Item>\r\n                )}\r\n                {!authenticatedUser && (\r\n                    <Menu.Item as={NavLink}\r\n                               to=\"/login\"\r\n                               exact\r\n                               activeClassName='active'\r\n                               name=\"sign-in\"\r\n                               icon='sign-in'\r\n                               text='Sign In'/>\r\n                )}\r\n            </Menu.Menu>\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default WideNavbarComponent;\r\n\r\nWideNavbarComponent.propTypes = {\r\n    isLoading: PropTypes.number,\r\n    authenticatedUser: PropTypes.object,\r\n    signOut: PropTypes.func.isRequired\r\n};\r\n","import React from 'react';\r\nimport {Button, Dropdown, Image, Menu} from \"semantic-ui-react\";\r\nimport logo from \"../../assets/logo.svg\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction MobileNavbarComponent(props) {\r\n\r\n    const {isLoading, authenticatedUser, signOut} = props;\r\n\r\n    return (\r\n        <Menu size='large' secondary>\r\n            <Menu.Item>\r\n                <Image src={logo}\r\n                       size='mini'\r\n                       alt=\"would you rather application logo\"\r\n                       className={isLoading ? \"spin\" : \"\"}\r\n                />\r\n            </Menu.Item>\r\n            {!authenticatedUser && (<Menu.Item header>Would you rather?</Menu.Item>)}\r\n            {authenticatedUser && (<Menu.Item header>\r\n                <Image src={authenticatedUser.avatarURL}\r\n                       size='mini'\r\n                       spaced={\"right\"}\r\n                       avatar\r\n                       alt={`avatar of ${authenticatedUser.name}`}\r\n                />\r\n                {`Hello, ${authenticatedUser.name}`}\r\n            </Menu.Item>)}\r\n            <Menu.Menu position='right'>\r\n                <Dropdown\r\n                    icon='bars'\r\n                    as={Button}\r\n                    secondary\r\n                    size=\"large\"\r\n                    className='icon'\r\n                >\r\n                    <Dropdown.Menu>\r\n                        {authenticatedUser && (\r\n                            <React.Fragment>\r\n                                <Dropdown.Item as={NavLink}\r\n                                               to=\"/\"\r\n                                               exact\r\n                                               activeClassName='active'\r\n                                               name='home'>\r\n                                    Home</Dropdown.Item>\r\n                                <Dropdown.Item as={NavLink}\r\n                                               to=\"/new\"\r\n                                               exact\r\n                                               activeClassName='active'\r\n                                               name='New Question'>\r\n                                    New Question</Dropdown.Item>\r\n                                <Dropdown.Item as={NavLink}\r\n                                               to=\"/leaderboard\"\r\n                                               exact\r\n                                               activeClassName='active'\r\n                                               name='Leader Board'>\r\n                                    Leader Board</Dropdown.Item>\r\n                                <Dropdown.Divider/>\r\n                                <Dropdown.Item as={Button}\r\n                                               onClick={() => {\r\n                                                   signOut()\r\n                                               }}\r\n                                               icon='sign-out'\r\n                                               text='Sign Out'/>\r\n                            </React.Fragment>\r\n                        )}\r\n                        {!authenticatedUser && (\r\n                            <Dropdown.Item as={NavLink}\r\n                                           to=\"/login\"\r\n                                           exact\r\n                                           activeClassName='active'\r\n                                           name=\"sign-in\"\r\n                                           icon='sign-in'\r\n                                           text='Sign In'/>\r\n                        )}\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n            </Menu.Menu>\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default MobileNavbarComponent;\r\n\r\nMobileNavbarComponent.propTypes = {\r\n    isLoading: PropTypes.number,\r\n    authenticatedUser: PropTypes.object,\r\n    signOut: PropTypes.func.isRequired\r\n};\r\n","export let users = {\r\n    molly: {\r\n        id: 'molly',\r\n        name: 'Molly',\r\n        avatarURL: 'https://semantic-ui.com/images/avatar2/large/molly.png',\r\n        answers: {\r\n            \"8xf0y6ziyjabvozdd253nd\": 'optionOne',\r\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo',\r\n            \"am8ehyc8byjqgar0jgpub9\": 'optionTwo',\r\n            \"loxhs1bqm25b708cmbf3g\": 'optionTwo'\r\n        },\r\n        questions: ['8xf0y6ziyjabvozdd253nd', 'am8ehyc8byjqgar0jgpub9']\r\n    },\r\n    matthew: {\r\n        id: 'matthew',\r\n        name: 'Matthew',\r\n        avatarURL: 'https://semantic-ui.com/images/avatar2/large/matthew.png',\r\n        answers: {\r\n            \"vthrdm985a262al8qx3do\": 'optionOne',\r\n            \"xj352vofupe1dqz9emx13r\": 'optionTwo',\r\n        },\r\n        questions: ['loxhs1bqm25b708cmbf3g', 'vthrdm985a262al8qx3do'],\r\n    },\r\n    elyse: {\r\n        id: 'elyse',\r\n        name: 'Elyse',\r\n        avatarURL: 'https://semantic-ui.com/images/avatar2/large/elyse.png',\r\n        answers: {\r\n            \"xj352vofupe1dqz9emx13r\": 'optionOne',\r\n            \"vthrdm985a262al8qx3do\": 'optionTwo',\r\n            \"6ni6ok3ym7mf1p33lnez\": 'optionTwo'\r\n        },\r\n        questions: ['6ni6ok3ym7mf1p33lnez', 'xj352vofupe1dqz9emx13r'],\r\n    }\r\n};\r\n","export let questions = {\r\n    \"8xf0y6ziyjabvozdd253nd\": {\r\n        id: '8xf0y6ziyjabvozdd253nd',\r\n        author: 'molly',\r\n        timestamp: 1467166872634,\r\n        optionOne: {\r\n            votes: ['molly'],\r\n            text: 'have horrible short term memory',\r\n        },\r\n        optionTwo: {\r\n            votes: [],\r\n            text: 'have horrible long term memory'\r\n        }\r\n    },\r\n    \"6ni6ok3ym7mf1p33lnez\": {\r\n        id: '6ni6ok3ym7mf1p33lnez',\r\n        author: 'matthew',\r\n        timestamp: 1468479767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'become a superhero',\r\n        },\r\n        optionTwo: {\r\n            votes: ['matthew', 'molly'],\r\n            text: 'become a supervillain'\r\n        }\r\n    },\r\n    \"am8ehyc8byjqgar0jgpub9\": {\r\n        id: 'am8ehyc8byjqgar0jgpub9',\r\n        author: 'molly',\r\n        timestamp: 1488579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be telekinetic',\r\n        },\r\n        optionTwo: {\r\n            votes: ['molly'],\r\n            text: 'be telepathic'\r\n        }\r\n    },\r\n    \"loxhs1bqm25b708cmbf3g\": {\r\n        id: 'loxhs1bqm25b708cmbf3g',\r\n        author: 'elyse',\r\n        timestamp: 1482579767190,\r\n        optionOne: {\r\n            votes: [],\r\n            text: 'be a front-end developer',\r\n        },\r\n        optionTwo: {\r\n            votes: ['molly'],\r\n            text: 'be a back-end developer'\r\n        }\r\n    },\r\n    \"vthrdm985a262al8qx3do\": {\r\n        id: 'vthrdm985a262al8qx3do',\r\n        author: 'elyse',\r\n        timestamp: 1489579767190,\r\n        optionOne: {\r\n            votes: ['elyse'],\r\n            text: 'find $50 yourself',\r\n        },\r\n        optionTwo: {\r\n            votes: ['matthew'],\r\n            text: 'have your best friend find $500'\r\n        }\r\n    },\r\n    \"xj352vofupe1dqz9emx13r\": {\r\n        id: 'xj352vofupe1dqz9emx13r',\r\n        author: 'matthew',\r\n        timestamp: 1493579767190,\r\n        optionOne: {\r\n            votes: ['matthew'],\r\n            text: 'write JavaScript',\r\n        },\r\n        optionTwo: {\r\n            votes: ['elyse'],\r\n            text: 'write Swift'\r\n        }\r\n    },\r\n};\r\n","import {questions, users} from \"./data\";\r\n\r\nexport class GameBackend {\r\n\r\n    static generateUID() {\r\n        return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15);\r\n    }\r\n\r\n    static getUsers() {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => res({...users}), 1000)\r\n        })\r\n    }\r\n\r\n    static getQuestions() {\r\n        return new Promise((res, rej) => {\r\n            setTimeout(() => res({...questions}), 1000)\r\n        })\r\n    }\r\n\r\n    static signIn(userId) {\r\n        return new Promise(((resolve, reject) => {\r\n            for (let userKey in users) {\r\n                if (userKey === userId) {\r\n                    setTimeout(() => resolve(userId), 1000);\r\n                    return;\r\n                }\r\n            }\r\n            reject(\"Invalid user!\");\r\n        }));\r\n    }\r\n\r\n    static formatQuestion({optionOneText, optionTwoText, author}) {\r\n        return {\r\n            id: GameBackend.generateUID(),\r\n            timestamp: Date.now(),\r\n            author,\r\n            optionOne: {\r\n                votes: [],\r\n                text: optionOneText,\r\n            },\r\n            optionTwo: {\r\n                votes: [],\r\n                text: optionTwoText,\r\n            }\r\n        }\r\n    }\r\n\r\n    static saveQuestion(question) {\r\n        return new Promise((res, rej) => {\r\n            try {\r\n                const authenticatedUser = question.author;\r\n                const formattedQuestion = GameBackend.formatQuestion(question);\r\n                setTimeout(() => {\r\n                    questions[formattedQuestion.id] = formattedQuestion;\r\n                    users[authenticatedUser].questions.concat([formattedQuestion.id]);\r\n                    res(formattedQuestion)\r\n                }, 1000)\r\n            } catch (e) {\r\n                rej(e);\r\n            }\r\n        })\r\n    }\r\n\r\n    static saveQuestionAnswer({authenticatedUser, qid, answer}) {\r\n        return new Promise((res, rej) => {\r\n            try {\r\n                setTimeout(() => {\r\n                    users[authenticatedUser].answers[qid] = answer;\r\n                    questions[qid][answer].votes.concat([authenticatedUser]);\r\n                    res()\r\n                }, 500)\r\n            } catch (e) {\r\n                rej(e);\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n","import {GameBackend} from \"../../backend/game/game.backend\";\r\n\r\nexport class GameService {\r\n\r\n    static getInitialData() {\r\n        return Promise.all([\r\n            GameBackend.getUsers(),\r\n            GameBackend.getQuestions()\r\n        ]).then(([users, questions]) => ({\r\n            users,\r\n            questions\r\n        }));\r\n    }\r\n\r\n    static getUsers() {\r\n        return GameBackend.getUsers();\r\n    }\r\n\r\n    static signIn(userId){\r\n        return GameBackend.signIn(userId);\r\n    }\r\n\r\n    static getQuestions() {\r\n        return GameBackend.getQuestions();\r\n    }\r\n\r\n}\r\n","import {hideLoading, showLoading} from \"react-redux-loading-bar\";\r\nimport {GameService} from \"../services\";\r\n\r\nexport const AUTHENTICATED_USER_ACTION_TYPES = {\r\n    SET_AUTHENTICATED_USER: \"SET_AUTHENTICATED_USER\"\r\n};\r\n\r\n\r\nexport function setAuthenticatedUser(authenticatedUser) {\r\n    return {\r\n        type: AUTHENTICATED_USER_ACTION_TYPES.SET_AUTHENTICATED_USER,\r\n        authenticatedUser\r\n    }\r\n}\r\n\r\nexport function handleSetAuthenticatedUser(authenticatedUser) {\r\n    return (dispatch) => {\r\n        dispatch(showLoading());\r\n        GameService.signIn(authenticatedUser)\r\n            .then(() => {\r\n                dispatch(setAuthenticatedUser(authenticatedUser));\r\n            }).catch((error) => {\r\n            alert(error);\r\n        })\r\n            .finally(() => {\r\n                dispatch(hideLoading());\r\n            })\r\n    };\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {Responsive} from \"semantic-ui-react\";\r\nimport LoadingBar from \"react-redux-loading-bar\";\r\nimport WideNavbarComponent from \"./wide.navbar.component\";\r\nimport MobileNavbarComponent from \"./mobile.navbar.component\";\r\nimport {setAuthenticatedUser} from \"../../actions/authenticatedUser.action\";\r\n\r\nclass NavbarComponent extends Component {\r\n\r\n    signOut() {\r\n        const {dispatch} = this.props;\r\n        dispatch(setAuthenticatedUser(null));\r\n    }\r\n\r\n\r\n    render() {\r\n        const {isLoading, authenticatedUser} = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <LoadingBar style={{backgroundColor: 'rgb(97,218,251)'}}/>\r\n                <Responsive minWidth={768}>\r\n                    <WideNavbarComponent authenticatedUser={authenticatedUser}\r\n                                         isLoading={isLoading}\r\n                                         signOut={this.signOut.bind(this)}/>\r\n                </Responsive>\r\n                <Responsive maxWidth={767}>\r\n                    <MobileNavbarComponent authenticatedUser={authenticatedUser}\r\n                                           isLoading={isLoading}\r\n                                           signOut={this.signOut.bind(this)}/>\r\n                </Responsive>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nfunction mapStateToProps({authenticatedUser, users, loadingBar}) {\r\n    return {\r\n        authenticatedUser: users ? users[authenticatedUser] : null,\r\n        isLoading: loadingBar.default\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavbarComponent);\r\n","import React from 'react';\r\n\r\nfunction FooterComponent() {\r\n    return (\r\n        <span className=\"copy-right\">\r\n                    copyright © 2020 all rights reserved by\r\n                    <a href=\"https://www.seanroshan.com\" rel=\"noopener noreferrer\" target=\"_blank\"\r\n                       className=\"copy-right-link\">Sean Roshan</a>\r\n        </span>\r\n    );\r\n}\r\n\r\nexport default FooterComponent;\r\n","import React, {Component} from 'react';\r\n\r\nclass ComposeComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Compose Component!</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ComposeComponent;\r\n","import React, {Component} from 'react';\r\n\r\nclass LeaderboardComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Leaderboard Component!</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default LeaderboardComponent;\r\n","import {hideLoading, showLoading} from \"react-redux-loading-bar\";\r\nimport {GameService} from \"../services\";\r\n\r\nexport const USERS_ACTION_TYPES = {\r\n    RECEIVE_USERS: \"RECEIVE_USERS\"\r\n};\r\n\r\nexport function receiveUsers(users) {\r\n    return {\r\n        type: USERS_ACTION_TYPES.RECEIVE_USERS,\r\n        users\r\n    }\r\n}\r\n\r\n\r\nexport function handleReceiveUsers() {\r\n    return (dispatch) => {\r\n        dispatch(showLoading());\r\n        GameService.getUsers().then((users) => {\r\n            dispatch(receiveUsers(users));\r\n            dispatch(hideLoading());\r\n        });\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {handleReceiveUsers} from \"../../../actions/users.actions\";\r\nimport {Card, CardHeader, Dropdown, Header, Image, Responsive} from \"semantic-ui-react\";\r\nimport {handleSetAuthenticatedUser} from \"../../../actions/authenticatedUser.action\";\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    static initializeUserOptions(users) {\r\n        if (!users) return [];\r\n        return Object.keys(users).map((key) => {\r\n            const user = users[key];\r\n            return {\r\n                key,\r\n                text: user.name,\r\n                value: user.id,\r\n                image: {avatar: true, src: user.avatarURL}\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        const {dispatch, users} = this.props;\r\n        dispatch(handleReceiveUsers(users));\r\n    }\r\n\r\n    signIn(userId) {\r\n        const {dispatch} = this.props;\r\n        dispatch(handleSetAuthenticatedUser(userId));\r\n    }\r\n\r\n    render() {\r\n\r\n        const header = \"Welcome to the Would You Rather App!\";\r\n        const subHeader = \"Please sign in to continue\";\r\n\r\n        const {users} = this.props;\r\n\r\n        let userOptions = LoginComponent.initializeUserOptions(users);\r\n\r\n        return (\r\n            <Card fluid color='grey'>\r\n                <CardHeader textAlign=\"center\" style={{backgroundColor: \"rgba(220,220,220,0.5)\", padding: \"10px\"}}>\r\n                    <Responsive minWidth=\"401\" as={Header} size=\"medium\">{header}</Responsive>\r\n                    <Responsive maxWidth=\"400\" as={Header} size=\"small\">{header}</Responsive>\r\n                    <Header size=\"tiny\">{subHeader}</Header>\r\n                </CardHeader>\r\n                <Card.Content textAlign={\"center\"}>\r\n                    <Image\r\n                        src=\"https://s3-us-west-2.amazonaws.com/asset.plexuss.com/news/images/would-you-rather-school-edition-lg.jpg\"\r\n                        size='large'\r\n                        alt=\"would you rather login image\"\r\n                    />\r\n                    <Header size=\"huge\" color=\"black\">Sign in</Header>\r\n                    <Dropdown\r\n                        text='Select User'\r\n                        icon='user'\r\n                        floating\r\n                        labeled\r\n                        button\r\n                        className='icon'\r\n                    >\r\n                        <Dropdown.Menu>\r\n                            <Dropdown.Header content='Please select a user to sign in'/>\r\n                            {userOptions && userOptions.length && userOptions.map((option) => (\r\n                                <Dropdown.Item key={option.value} onClick={() => this.signIn(option.key)} {...option} />\r\n                            ))}\r\n                        </Dropdown.Menu>\r\n                    </Dropdown>\r\n                </Card.Content>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nfunction mapStateToProps({users}) {\r\n    return {\r\n        users\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginComponent);\r\n","import React, {Component} from 'react';\r\n\r\nclass HomeComponent extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Home Component!</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default HomeComponent;\r\n","import React, {Component} from 'react';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport ComposeComponent from \"./compose/compose.component\";\r\nimport LeaderboardComponent from \"./leaderboard/leaderboard.component\";\r\nimport LoginComponent from \"./login/login.component\";\r\nimport {connect} from \"react-redux\";\r\nimport HomeComponent from \"./home/home.component\";\r\n\r\nclass DashboardComponent extends Component {\r\n    render() {\r\n\r\n        const {authenticatedUser} = this.props;\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Route path=\"/\" exact render={() => {\r\n                    return authenticatedUser\r\n                        ? <HomeComponent/>\r\n                        : <Redirect to=\"/login\"/>;\r\n                }}/>\r\n                <Route path=\"/new\" render={() => {\r\n                    return authenticatedUser\r\n                        ? <ComposeComponent/>\r\n                        : <Redirect to=\"/login\"/>;\r\n                }}/>\r\n                <Route path=\"/leaderboard\" render={() => {\r\n                    return authenticatedUser\r\n                        ? <LeaderboardComponent/>\r\n                        : <Redirect to=\"/login\"/>;\r\n                }}/>\r\n                <Route path=\"/login\" render={() => {\r\n                    return authenticatedUser\r\n                        ? <Redirect to=\"/\"/>\r\n                        : <LoginComponent/>;\r\n                }}/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nfunction mapStateToProps({authenticatedUser}) {\r\n    return {\r\n        authenticatedUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(DashboardComponent);\r\n","import React, {Component} from 'react';\nimport './styles/Application.scss';\nimport NavbarComponent from \"./components/navbar/navbar.component\";\nimport {Segment} from \"semantic-ui-react\";\nimport FooterComponent from \"./components/footer/footer.component\";\nimport {HashRouter} from \"react-router-dom\";\nimport DashboardComponent from \"./views/dashboard/dashboard.component\";\nimport {connect} from \"react-redux\";\nimport {handleInitialData} from \"./actions/shared.actions\";\n\n/**\n * @return {boolean}\n */\nclass App extends Component {\n\n    componentDidMount() {\n        this.props.dispatch(handleInitialData())\n    }\n\n    render() {\n        return (\n            <HashRouter basename=\"/\">\n                <div className=\"header\">\n                    <NavbarComponent/>\n                </div>\n                <Segment className=\"app-content-container\">\n                    <DashboardComponent/>\n                </Segment>\n                <div className=\"app-footer-container\"><FooterComponent/></div>\n            </HashRouter>\n        );\n    }\n\n}\n\n\nfunction mapStateToProps({loadingBar}) {\n    return {\n        loadingBar\n    }\n}\n\n\nexport default connect(mapStateToProps)(App);\n","import {hideLoading, showLoading} from \"react-redux-loading-bar\";\r\n\r\nexport function handleInitialData() {\r\n    return (dispatch) => {\r\n        dispatch(showLoading());\r\n        setTimeout(() => {\r\n            dispatch(hideLoading());\r\n        }, 500);\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {combineReducers} from \"redux\";\r\nimport {loadingBarReducer} from \"react-redux-loading-bar\";\r\n\r\nimport users from \"./users.reducer\";\r\nimport authenticatedUser from \"./authenticatedUser.reducer\";\r\n\r\n\r\nexport default combineReducers({\r\n    users,\r\n    authenticatedUser,\r\n    loadingBar: loadingBarReducer\r\n});\r\n","import {USERS_ACTION_TYPES} from \"../actions/users.actions\";\r\n\r\nexport default function users(state = {}, action) {\r\n    switch (action.type) {\r\n        case USERS_ACTION_TYPES.RECEIVE_USERS: {\r\n            return {\r\n                ...state,\r\n                ...action.users\r\n            }\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n","import {AUTHENTICATED_USER_ACTION_TYPES} from \"../actions/authenticatedUser.action\";\r\n\r\nexport default function authenticatedUser(state = null, action) {\r\n    switch (action.type) {\r\n        case AUTHENTICATED_USER_ACTION_TYPES.SET_AUTHENTICATED_USER: {\r\n            return action.authenticatedUser\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n\r\n\r\n    }\r\n\r\n}\r\n","const logger = (store) => (next) => (action) => {\r\n    console.group(action.type);\r\n    console.log('The action: ', action);\r\n    const result = next(action);\r\n    console.log('The new state: ', store.getState());\r\n    console.groupEnd();\r\n    return result;\r\n};\r\nexport default logger;\r\n","import thunk from \"redux-thunk\";\r\nimport logger from \"./logger.middleware\";\r\nimport {applyMiddleware} from \"redux\";\r\n\r\nexport default applyMiddleware(\r\n    thunk,\r\n    logger\r\n);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport {createStore} from \"redux\";\nimport reducer from './reducers';\nimport middleware from './middlewares';\n\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}